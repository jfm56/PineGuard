"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/utils/loadScript.ts":
/*!*********************************!*\
  !*** ./app/utils/loadScript.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadScript: function() { return /* binding */ loadScript; }\n/* harmony export */ });\nfunction loadScript(src, id) {\n    // Check if the script is already loaded\n    if (id && document.getElementById(id)) {\n        return Promise.resolve();\n    }\n    const existingScript = document.querySelector('script[src=\"'.concat(src, '\"]'));\n    if (existingScript) {\n        return Promise.resolve();\n    }\n    return new Promise((resolve, reject)=>{\n        // Check if script already exists by ID or src\n        const existingScript = id ? document.getElementById(id) : document.querySelector('script[src=\"'.concat(src, '\"]'));\n        if (existingScript) {\n            resolve();\n            return;\n        }\n        const script = document.createElement(\"script\");\n        if (id) {\n            script.id = id;\n        }\n        script.src = src;\n        script.async = true;\n        script.defer = true;\n        let timeoutId;\n        script.onload = ()=>{\n            if (timeoutId) {\n                clearTimeout(timeoutId);\n            }\n            console.log(\"Script loaded successfully: \".concat(src));\n            resolve();\n        };\n        script.onerror = (err)=>{\n            if (timeoutId) {\n                clearTimeout(timeoutId);\n            }\n            console.error(\"Error loading script \".concat(src, \":\"), err);\n            reject(new Error(\"Failed to load script: \".concat(src)));\n        };\n        // Add a timeout to prevent hanging\n        timeoutId = setTimeout(()=>{\n            script.remove();\n            reject(new Error(\"Timeout loading script: \".concat(src)));\n        }, 10000); // 10 second timeout\n        document.head.appendChild(script);\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC91dGlscy9sb2FkU2NyaXB0LnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxXQUFXQyxHQUFXLEVBQUVDLEVBQVc7SUFDakQ7SUFDQSxJQUFJQSxNQUFNQyxTQUFTQyxjQUFjLENBQUNGLEtBQUs7UUFDckMsT0FBT0csUUFBUUMsT0FBTztJQUN4QjtJQUVBLE1BQU1DLGlCQUFpQkosU0FBU0ssYUFBYSxDQUFFLGVBQWtCLE9BQUpQLEtBQUk7SUFDakUsSUFBSU0sZ0JBQWdCO1FBQ2xCLE9BQU9GLFFBQVFDLE9BQU87SUFDeEI7SUFDQSxPQUFPLElBQUlELFFBQVEsQ0FBQ0MsU0FBU0c7UUFDM0I7UUFDQSxNQUFNRixpQkFBaUJMLEtBQ25CQyxTQUFTQyxjQUFjLENBQUNGLE1BQ3hCQyxTQUFTSyxhQUFhLENBQUUsZUFBa0IsT0FBSlAsS0FBSTtRQUU5QyxJQUFJTSxnQkFBZ0I7WUFDbEJEO1lBQ0E7UUFDRjtRQUVBLE1BQU1JLFNBQVNQLFNBQVNRLGFBQWEsQ0FBQztRQUN0QyxJQUFJVCxJQUFJO1lBQUNRLE9BQU9SLEVBQUUsR0FBR0E7UUFBRztRQUN4QlEsT0FBT1QsR0FBRyxHQUFHQTtRQUNiUyxPQUFPRSxLQUFLLEdBQUc7UUFDZkYsT0FBT0csS0FBSyxHQUFHO1FBRWYsSUFBSUM7UUFFSkosT0FBT0ssTUFBTSxHQUFHO1lBQ2QsSUFBSUQsV0FBVztnQkFBQ0UsYUFBYUY7WUFBVztZQUN4Q0csUUFBUUMsR0FBRyxDQUFFLCtCQUFrQyxPQUFKakI7WUFDM0NLO1FBQ0Y7UUFFQUksT0FBT1MsT0FBTyxHQUFJQyxDQUFBQTtZQUNoQixJQUFJTixXQUFXO2dCQUFDRSxhQUFhRjtZQUFXO1lBQ3hDRyxRQUFRSSxLQUFLLENBQUUsd0JBQTJCLE9BQUpwQixLQUFJLE1BQUltQjtZQUM5Q1gsT0FBTyxJQUFJYSxNQUFPLDBCQUE2QixPQUFKckI7UUFDN0M7UUFFQTtRQUNBYSxZQUFZUyxXQUFXO1lBQ3JCYixPQUFPYyxNQUFNO1lBQ2JmLE9BQU8sSUFBSWEsTUFBTywyQkFBOEIsT0FBSnJCO1FBQzlDLEdBQUcsUUFBUTtRQUVYRSxTQUFTc0IsSUFBSSxDQUFDQyxXQUFXLENBQUNoQjtJQUM1QjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC91dGlscy9sb2FkU2NyaXB0LnRzPzUyMzMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGxvYWRTY3JpcHQoc3JjOiBzdHJpbmcsIGlkPzogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gIC8vIENoZWNrIGlmIHRoZSBzY3JpcHQgaXMgYWxyZWFkeSBsb2FkZWRcbiAgaWYgKGlkICYmIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKSkge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgfVxuXG4gIGNvbnN0IGV4aXN0aW5nU2NyaXB0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihgc2NyaXB0W3NyYz1cIiR7c3JjfVwiXWApO1xuICBpZiAoZXhpc3RpbmdTY3JpcHQpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gIH1cbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAvLyBDaGVjayBpZiBzY3JpcHQgYWxyZWFkeSBleGlzdHMgYnkgSUQgb3Igc3JjXG4gICAgY29uc3QgZXhpc3RpbmdTY3JpcHQgPSBpZCBcbiAgICAgID8gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpXG4gICAgICA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYHNjcmlwdFtzcmM9XCIke3NyY31cIl1gKTtcbiAgICAgIFxuICAgIGlmIChleGlzdGluZ1NjcmlwdCkge1xuICAgICAgcmVzb2x2ZSgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICAgIGlmIChpZCkge3NjcmlwdC5pZCA9IGlkO31cbiAgICBzY3JpcHQuc3JjID0gc3JjO1xuICAgIHNjcmlwdC5hc3luYyA9IHRydWU7XG4gICAgc2NyaXB0LmRlZmVyID0gdHJ1ZTtcbiAgICBcbiAgICBsZXQgdGltZW91dElkOiBOb2RlSlMuVGltZW91dDtcblxuICAgIHNjcmlwdC5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICBpZiAodGltZW91dElkKSB7Y2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7fVxuICAgICAgY29uc29sZS5sb2coYFNjcmlwdCBsb2FkZWQgc3VjY2Vzc2Z1bGx5OiAke3NyY31gKTtcbiAgICAgIHJlc29sdmUoKTtcbiAgICB9O1xuICAgIFxuICAgIHNjcmlwdC5vbmVycm9yID0gKGVycikgPT4ge1xuICAgICAgaWYgKHRpbWVvdXRJZCkge2NsZWFyVGltZW91dCh0aW1lb3V0SWQpO31cbiAgICAgIGNvbnNvbGUuZXJyb3IoYEVycm9yIGxvYWRpbmcgc2NyaXB0ICR7c3JjfTpgLCBlcnIpO1xuICAgICAgcmVqZWN0KG5ldyBFcnJvcihgRmFpbGVkIHRvIGxvYWQgc2NyaXB0OiAke3NyY31gKSk7XG4gICAgfTtcblxuICAgIC8vIEFkZCBhIHRpbWVvdXQgdG8gcHJldmVudCBoYW5naW5nXG4gICAgdGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBzY3JpcHQucmVtb3ZlKCk7XG4gICAgICByZWplY3QobmV3IEVycm9yKGBUaW1lb3V0IGxvYWRpbmcgc2NyaXB0OiAke3NyY31gKSk7XG4gICAgfSwgMTAwMDApOyAvLyAxMCBzZWNvbmQgdGltZW91dFxuICAgIFxuICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiAgfSk7XG59XG4iXSwibmFtZXMiOlsibG9hZFNjcmlwdCIsInNyYyIsImlkIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIlByb21pc2UiLCJyZXNvbHZlIiwiZXhpc3RpbmdTY3JpcHQiLCJxdWVyeVNlbGVjdG9yIiwicmVqZWN0Iiwic2NyaXB0IiwiY3JlYXRlRWxlbWVudCIsImFzeW5jIiwiZGVmZXIiLCJ0aW1lb3V0SWQiLCJvbmxvYWQiLCJjbGVhclRpbWVvdXQiLCJjb25zb2xlIiwibG9nIiwib25lcnJvciIsImVyciIsImVycm9yIiwiRXJyb3IiLCJzZXRUaW1lb3V0IiwicmVtb3ZlIiwiaGVhZCIsImFwcGVuZENoaWxkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/loadScript.ts\n"));

/***/ })

});